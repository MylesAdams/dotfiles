if [ -f ~/.nvm/nvm.sh ]; then
    . ~/.nvm/nvm.sh
fi

export CLICOLOR=1
export LSCOLORS=ExFxCxDxBxegedabagacad

export EDITOR="vim"
export ALTERNATE_EDITOR=""

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export PATH="/usr/local/opt/llvm/bin:/usr/local/opt/openssl/bin:$PATH"

#export PATH="/usr/local/opt/llvm/bin:/usr/local/bin:/usr/local/opt/openssl/bin:/usr/bin:$PATH"

export LDFLAGS="-L/usr/local/opt/llvm/lib"
export CPPFLAGS="-I/usr/local/opt/llvm/include"

export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python3.6/site-packages/tensorflow/models/research/:/usr/local/lib/python3.6/site-packages/tensorflow/models/research/slim:~/Downloads/google-cloud-sdk/bin:~/Downloads/google-cloud-sdk/platform/google_appengine:~/Downloads/google-cloud-sdk/platform/google_appengine/google/appengine"

export GOOGLE_APPLICATION_CREDENTIALS="/Users/mylesadams/Documents/sbhacksv_credentials.json"

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"

if [ -f /usr/local/Cellar/git/2.19.2/etc/bash_completion.d/git-completion.bash ]; then
   . /usr/local/Cellar/git/2.19.2/etc/bash_completion.d/git-completion.bash
fi

if [ -f /usr/local/Cellar/git/2.19.2/etc/bash_completion.d/git-prompt.sh ]; then
    . /usr/local/Cellar/git/2.19.2/etc/bash_completion.d/git-prompt.sh
fi

if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

if command -v pyenv 1>/dev/null 2>&1; then
    eval "$(pyenv init -)"
fi

pyenv virtualenvwrapper_lazy
export WORKON_HOME=~/.virtualenvs
export PROJECT_HOME=~/Documents/Workspace/Python

if which pyenv-virtualenv-init > /dev/null; then
    eval "$(pyenv virtualenv-init -)";
fi

# export VIRTUAL_ENV_DISABLE_PROMPT=1

function virtualenv_info(){
    # Get Virtual Env
    if [[ -n "$VIRTUAL_ENV" ]]; then
        # Strip out the path and just leave the env name
        venv="${VIRTUAL_ENV##*/}"
    else
        # In case you don't have one activated
        venv=''
    fi
    [[ -n "$venv" ]] && echo "$venv"
}

WHITE='\[\033[00m\]'
GREEN='\[\033[0;32m\]'
RED='\[\033[0;91m\]'
BLUE='\[\033[0;94m\]'
YELLOW='\[\e[33m\]'
PURPLE='\[\033[38;5;183m\]'

function update_prompt() {

    PROMPT="┌─[\T]─[${GREEN}\u${WHITE}@${RED}\h${WHITE}]─[${BLUE}\w${WHITE}]"

    if type "__git_ps1" > /dev/null 2>&1; then
        if git rev-parse --git-dir > /dev/null 2>&1; then
            PROMPT="${PROMPT}-[${YELLOW}$(__git_ps1 '%s')${WHITE}]"
        fi
    fi

    if [[ $VENV_NAME != "" ]]; then
        if [[ $VIRTUAL_ENV != "" ]]; then
            PROMPT="${PROMPT}-[${PURPLE}\$(virtualenv_info)${WHITE}]"
        else
            workon $VENV_NAME
            PROMPT="${PROMPT}-[${PURPLE}\$(virtualenv_info)${WHITE}]"
        fi
    else
        if [[ $VIRTUAL_ENV != "" ]]; then
            deactivate
        fi
    fi

    PS1="${PROMPT}\n└──► "

    #-[${YELLOW}$(__git_ps1 '%s')${WHITE}]\n└──► 
}
export -f update_prompt

export PROMPT_COMMAND='update_prompt'

# PS1='┌─[\T]─[\[\033[0;32m\]\u\[\033[00m\]@\[\033[0;91m\]\h\[\033[00m\]]─[\[\033[0;94m\]\w\[\033[00m\]]-[\[\e[33m\]$(__git_ps1 '%s')\[\033[00m\]]\n└──► '
# PS1="┌─[\T]─[${GREEN}\u${WHITE}@${RED}\h${WHITE}]─[${BLUE}\w${WHITE}]-[${YELLOW}$(__git_ps1 '%s')${WHITE}]\n└──► "

eval "$(direnv hook bash)"
export DIRENV_LOG_FORMAT=
